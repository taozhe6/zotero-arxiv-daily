name: Send emails daily
on:
  workflow_dispatch:
  schedule:
    - cron: '0 22 * * *'

jobs:
  calculate-and-send:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: ${{ vars.REPOSITORY }}
          ref: ${{ vars.REF }}
      - name: Cache SentenceTransformer Model
        id: cache-model
        uses: actions/cache@v3
        with:
          # SentenceTransformer 默认缓存路径
          path: ~/.cache/huggingface/hub/
          # 缓存键：包含 pyproject.toml 的哈希和模型名称
          # 'avsolatorio/GIST-small-Embedding-v0' 是 recommender.py 中使用的默认模型
          # 如果你的 MODEL_NAME 变量是动态的，并且可能改变，你可以使用 ${{ secrets.MODEL_NAME }}
          # 但为了简单和稳定，我们假设 recommender.py 中的默认模型是主要的
          key: sbert-model-${{ hashFiles('pyproject.toml') }}-avsolatorio/GIST-small-Embedding-v0
          # 恢复键：用于在精确匹配失败时，尝试恢复最近的缓存
          restore-keys: |
            sbert-model-${{ hashFiles('pyproject.toml') }}-
      # --- END: 添加这个缓存步骤 ---
      - name: Setup uv
        uses: astral-sh/setup-uv@v3
        with:
          version: '0.5.4'

      - name: Run script
        env:
          ZOTERO_ID: ${{ secrets.ZOTERO_ID }}
          ZOTERO_KEY: ${{ secrets.ZOTERO_KEY }}
          ZOTERO_IGNORE: ${{ vars.ZOTERO_IGNORE }}
          SEND_EMPTY: ${{ vars.SEND_EMPTY }}
          ARXIV_QUERY: ${{ secrets.ARXIV_QUERY }}
          SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SENDER: ${{ secrets.SENDER }}
          RECEIVER: ${{ secrets.RECEIVER }}
          SENDER_PASSWORD: ${{ secrets.SENDER_PASSWORD }}
          MAX_PAPER_NUM: ${{ secrets.MAX_PAPER_NUM }}
          USE_LLM_API: ${{ secrets.USE_LLM_API }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_BASE: ${{ secrets.OPENAI_API_BASE }}
          MODEL_NAME: ${{ secrets.MODEL_NAME }}
          LANGUAGE: ${{ vars.LANGUAGE }}
        run: |
          uv run main.py
